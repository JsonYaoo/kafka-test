server.servlet.context-path=/producer
server.port=8001

# Spring整合Kafka
spring.kafka.bootstrap-servers=192.168.1.111:9092
# Kafka Producer发送消息失败时的重试次数
spring.kafka.producer.retries=0
# 批量发送数据的配置
spring.kafka.producer.batch-size=16384
# 设置Kafka生产者内存缓冲区大小(32M)
spring.kafka.producer.buffer-memory=33554432
# Kafka消息序列化配置
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# Kafka可靠性投递配置: 是kafka生产端最重要的选项
# Acks = 0: 生产者在成功写入消息之前不会等待任何来自服务器的响应
# Acks = 1: 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应(推荐, 可以发挥Kafka真正的威力)
# Acks = -1: 表示分区leader必须等待消息被成功写入到所有的ISR副本(同步副本)中才认为producer请求成功. 这种方案提供最高的消息持久性保证, 但是理论上吞吐率也是最差的
spring.kafka.producer.acks=1